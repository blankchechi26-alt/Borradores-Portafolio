# -*- coding: utf-8 -*-
"""Analisis portafolio 5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QbE3qqurj9Ih2uEIxucmdTRFTn7zgUmM
"""

# -*- coding: utf-8 -*-
"""Aplicación de análisis de portafolio con dos acciones (Streamlit y Yahoo Finance)"""

import streamlit as st
import pandas as pd
import yfinance as yf
import matplotlib.pyplot as plt

# -------------------------------
# Título e introducción
# -------------------------------
st.title('ANÁLISIS DE PORTAFOLIO DE INVERSIÓN')
st.subheader('Ejemplo práctico de diversificación con dos acciones')

st.markdown("""
Este ejemplo muestra cómo la **diversificación** reduce el riesgo al combinar activos de distintos sectores.
Usaremos las acciones de **Apple (AAPL)** y **Coca-Cola (KO)**.
""")

# -------------------------------
# Selección de acciones
# -------------------------------
tickers = ['AAPL', 'KO']
st.write("**Acciones seleccionadas:**", tickers)

# -------------------------------
# Descarga de datos desde Yahoo Finance
# -------------------------------
# Removed the try...except block to allow the error to propagate if yf.download fails.
data = yf.download(tickers, start='2022-01-01', end='2025-01-01')
st.subheader("📊 Precios históricos ajustados")
st.dataframe(data.tail())


# -------------------------------
# Cálculo de rendimientos
# -------------------------------
# Select the 'Close' price from the MultiIndex data
close_prices = data['Close']
returns = close_prices.pct_change().dropna()

st.subheader("📈 Estadísticas de rentabilidad diaria")
st.write(returns.describe())

# -------------------------------
# Gráfico de evolución de precios
# -------------------------------
st.subheader("📉 Evolución del precio de las acciones")
fig, ax = plt.subplots()
close_prices.plot(ax=ax)
ax.set_xlabel("Fecha")
ax.set_ylabel("Precio ajustado (USD)")
st.pyplot(fig)

# -------------------------------
# Gráfico de dispersión (correlación)
# -------------------------------
st.subheader("🔗 Relación entre los rendimientos (correlación)")
fig2, ax2 = plt.subplots()
ax2.scatter(returns['AAPL'], returns['KO'], alpha=0.6)
ax2.set_xlabel('Rendimiento diario de Apple (AAPL)')
ax2.set_ylabel('Rendimiento diario de Coca-Cola (KO)')
ax2.set_title('Diversificación entre Apple y Coca-Cola')
st.pyplot(fig2)

# -------------------------------
# Matriz de correlación
# -------------------------------
st.subheader("📊 Matriz de correlación")
correlacion = returns.corr()
st.write(correlacion)

# -------------------------------
# Interpretación
# -------------------------------
st.markdown("""
### 💡 Interpretación
- Si la **correlación** entre AAPL y KO es **baja o negativa**, significa que las acciones no se mueven igual:
  cuando una baja, la otra puede subir o mantenerse estable.
- Esto **reduce el riesgo total del portafolio** y demuestra la utilidad de la **diversificación**.

**Conclusión:** combinar activos de sectores distintos (tecnología y consumo) genera un portafolio más estable frente a la volatilidad del mercado.
""")

!streamlit run app.py

# Commented out IPython magic to ensure Python compatibility.
# %pip install streamlit yfinance matplotlib pandas

!pip install yfinance

